name: Tests

on:
    pull_request:
      branches:
        - master

jobs:

  check-versions:
    if: |
      contains(github.event.pull_request.title, 'release') == true
    runs-on: ubuntu-latest

    steps:   
    - uses: actions/checkout@v3

    - name: Extract Version from CHANGELOG.md
      id: extract-version
      run: |
        # Use grep to find the first occurrence of the version number matching "## 0.0.0" pattern
        version=$(grep -m 1 -oP '## \d+\.\d+\.\d+' CHANGELOG.md | cut -d ' ' -f 2)
        echo "version=$version" >> $GITHUB_ENV

    - name: Extract Version from pubspec.yaml
      id: extract-version-pubspec
      run: |
        pubspec_version=$(grep -m 1 -oP 'version: \d+\.\d+\.\d+' pubspec.yaml | cut -d ' ' -f 2)
        echo "pubspec_version=$pubspec_version" >> $GITHUB_ENV

    - name: Extract version from android/build.gradle
      id: extract-version-android
      run: |
        android_version=$(awk '/^version/ {gsub(/[^0-9.]/, "", $2); print $2}' android/build.gradle)
        echo "android_version=$android_version" >> $GITHUB_ENV

    - name: Extract version from ios/connectycube_flutter_call_kit.podspec
      id: extract-version-ios
      run: |
        ios_version=$(awk '/s\.version/ {gsub(/[^0-9.]/, "", $3); print $3}' ios/connectycube_flutter_call_kit.podspec)
        echo "ios_version=$ios_version" >> $GITHUB_ENV

    - name: Compare Versions
      run: |
          if [ "$version" != "$pubspec_version" ]; then
            echo "Version mismatch: CHANGELOG version ($version) does not match pubspec.yaml version ($pubspec_version)"
            exit 1
          elif [ "$version" != "$android_version" ]; then
            echo "Version mismatch: CHANGELOG version ($version) does not match android/build.gradle version ($android_version)"
            exit 1
          elif [ "$version" != "$ios_version" ]; then
            echo "Version mismatch: CHANGELOG version ($version) does not match ios/connectycube_flutter_call_kit.podspec version ($ios_version)"
            exit 1
          else
            echo "Versions match: $version"
          fi

    - name: Check PR title for version
      run: |
          pr_title="${{ github.event.pull_request.title }}"
          if [[ "$pr_title" != *"$version"* ]]; then
            echo "Version $version is not mentioned in the PR title."
            exit 1
          else
            echo "PR title contains version $version"
          fi

  test:
    if: |
      contains(github.event.pull_request.title, 'release') == true
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.10.0'
        channel: 'stable'

    - name: Install dependencies
      run: flutter pub get
    
    - name: Check Publish Warnings
      run: flutter pub publish --dry-run